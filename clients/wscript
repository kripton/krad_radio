#!/usr/bin/env python

import os

programs = """
krad_radio.c
krad_radio_simple.c
krad_radio_watcher.c
""".split()

programs2 = """
krad_radio_manager.c
""".split()

programs3 = """
krad_radio_vp.c
krad_radio_ap.c
""".split()

# FIXME we should not be having krad_transmitter and krad_ring in the below
# but right now ebml and mkv/webm muxing is mangled together

libsources = """
../lib/krad_compositor/krad_compositor_client.c
../lib/krad_radio/krad_radio_client.c
../lib/krad_system/krad_system.c
../lib/krad_ebml/krad_ebml.c
../lib/krad_osc/krad_osc.c
../lib/krad_ipc/krad_ipc_client.c
../lib/krad_mixer/krad_mixer_client.c
../lib/krad_radio/krad_radio_client_ctl.c
../lib/krad_transmitter/krad_transmitter.c
../lib/krad_ring/krad_ring.c
../lib/krad_transponder/krad_transponder_client.c
../lib/krad_transponder/krad_transponder_common.c
../lib/krad_compositor/krad_compositor_common.c
""".split()

includedirs = """
../lib/krad_compositor/
../lib/krad_ticker/
../lib/krad_xmms2/
../lib/krad_y4m/
../lib/krad_framepool/
../lib/krad_web/
../lib/krad_web/ext/
../lib/krad_web/ext/libwebsockets/
../lib/krad_web/res/
../lib/krad_vhs/
../lib/krad_sfx/
../lib/krad_tone/
../lib/krad_ipc/
../lib/krad_tags/
../lib/krad_audio/
../lib/krad_theora/
../lib/krad_jack/
../lib/krad_alsa/
../lib/krad_mixer/
../lib/krad_osc/
../lib/krad_xmms2/
../lib/krad_wayland/
../lib/krad_vpx/
../lib/krad_v4l2/
../lib/krad_flac/
../lib/krad_vorbis/
../lib/krad_opus/
../lib/krad_radio/
../lib/krad_ring/
../lib/krad_ogg/
../lib/krad_io/
../lib/krad_transponder/
../lib/krad_transmitter/
../lib/krad_container/
../lib/krad_x11/
../lib/krad_udp/
../lib/krad_system/
../lib/krad_decklink/
../lib/krad_ebml/
../lib/krad_legacy/
/usr/local/include
/usr/include
""".split()

#shlibs = ["cairo", "pangocairo", "opus", "xmms2-client", "vpx"]
shlibs = ["opus"]

shlibs2 = ["cairo", "pangocairo", "gtk+-3.0"]

stlibs = []
syslibs = ['m', 'dl', 'z']
syslibs2 = ['rt']

def check_system(systm):

	global programs
	global includedirs
	global libsources
	global shlibs
	global shlibs2	
	global syslibs
	global syslibs2

	if systm.env['IS_LINUX']:
		#shlibs = shlibs + ["alsa"]    
		#libsources = ["../lib/krad_alsa/krad_alsa.c", "../lib/krad_alsa/krad_alsa_seq.c"] + libsources
		#programs = ["krad_radio_ev.c"] + programs
		syslibs = syslibs + syslibs2


	if systm.env['IS_MACOSX']:
		libsources = ["../lib/krad_legacy/krad_mach.c"] + libsources
		includedirs = ["/opt/libjpeg-turbo/include"] + includedirs
		shlibs = shlibs + ['turbojpeg']

def configure(conf):

	global programs
	global shlibs
	global shlibs2	
	global syslibs
	check_system(conf)

	for l in syslibs:
		conf.check(lib = l, cflags='-Wall', uselib_store = l)

	for l in shlibs:
		conf.check_cfg(package = l, uselib_store = l, args='--cflags --libs')

	if conf.options.nogtk == False:
		conf.env['KRAD_GTK'] = "yes"
		conf.env.append_unique('CFLAGS', ['-DKRAD_GTK'])
		for l in shlibs2:
			conf.check_cfg(package = l, uselib_store = l, args='--cflags --libs')

	for l in stlibs:
		conf.check_cfg(package = l, uselib_store = l, args='--cflags --libs --static')

def build(bld):

	global programs
	global shlibs
	global shlibs2	
	global syslibs
	global syslibs2
	check_system(bld)

	bld.shlib(
		source = libsources, 
		includes = includedirs, 
		target = "kradradio_client",
		uselib = shlibs + stlibs + syslibs)

	for p in programs:

		bld(features = 'c cprogram', 
			source = [p], 
			includes = includedirs, 
			target = p.replace(".c", ""),
			use = ["kradradio_client"],
			uselib = shlibs + stlibs + syslibs)
			
	if bld.env['KRAD_GTK'] == "yes":
		for p in programs2:
			bld(features = 'c cprogram', 
				source = [p], 
				includes = includedirs, 
				target = p.replace(".c", ""),
				use = ["kradradio_client"],
				uselib = shlibs + shlibs2 + stlibs + syslibs)

